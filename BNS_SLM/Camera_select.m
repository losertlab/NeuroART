%% Selects Camera positions to target and displays the calculated hologram
%%Calibration be 

CalibFileExist=input('Press 1 if a calibration file exists and choose the calibration data from the browser. Press Enter for making new calibration data ');

if CalibFileExist==1
    [CfileName,Path] = uigetfile('.\calibration', '*.mat');
    calibrationFilePath=[Path, CfileName];
else
    CfileDate=input('Date your calibration (YYYYMMDD): ','s');
    CfileName=[CfileDate,'_CamSLMCalib'];
    disp('Where do you want the SLM metadata saved?');
    Path=uigetdir('.\calibration');
    calibrationFilePath=[Path, CfileName];
    
    disp('Select the point pattern seen by the Camera')
    [file1,path1]=uigetfile(Path,'*.tif');% point pattern seen by the camera
    disp('Select the SLM Theoretical point pattern')
    [file2,path2]=uigetfile(Path, '*.tif');% the Pattern used to calculate the hologram Target intensity pattern for the Gerchburg Saxton algorithm
    cameraPointPatternImg = [path1,file1];% intensity pattern generated by the hologram that generates 4 asymmetric points
    fakePointPatternImg = [path2,file2]; % the Pattern used to calculate the hologram Target intensity pattern for the Gerchburg Saxton algorithm
    
end


%% Run this  For selecting other cells on the Target Image 

disp('Select Image to target neurons from')
[file3,path3]=uigetfile([Path,'*.tif']);% Camera image to select neurons from
CamTargetImg =[path3,file3]; %  Camera image to select neurons from

exprmnt_name = input('Input a name for your experiment: ','s');
% DateStamp=datestr(datetime('now','format','yyy-MM-dd HH:mm:ss'));
% experiment_name=[DateStamp exprmnt_name];

if CalibFileExist == 1
    load(calibrationFilePath);
    cameraToSlm = trafos.cameraToSlm;
    
else
  cameraToSlm= register(cameraPointPatternImg, fakePointPatternImg); %this is actually SLM to camera
    verify_Cam2SLM(...
        cameraToSlm, ...
        cameraPointPatternImg, ...
        fakePointPatternImg);
    trafos = struct;
    trafos.cameraToSlm = cameraToSlm;
   
    save(calibrationFilePath, 'trafos');
end
disp('Select neurons to target from the image. Double click on the last cell')
[P_DHOT, neuronXY] = select_neurons_from_cam(CamTargetImg, cameraToSlm);


%%
% %% Function to call through labview.
% VortexMode=15;
% Xoffset=0;
% Yoffset=0;
% Zoffset=0;
% PhotoStimDur=[];
% PCVoltage=[];
% PhotoStimWaveForm=[];
% close all
% SLM_metadata=PhotoStimParamSpan(P_DHOT, VortexMode,Xoffset,Yoffset, Zoffset,PhotoStimDur,PCVoltage, PhotoStimWaveForm);
% DateStamp=datestr(datetime('now','format','yyy-MM-dd HH:mm:ss'));
% experiment_name=[DateStamp exprmnt_name];
% 
% 
% %% writing metadata
% %maybe read all SLM metadata and put it together with experiment
% experiment.SLM_metadata=SLM_metadata;
% experiment.name = experiment_name;
% experiment.TargetIMG=imread(CamTargetImg);
% experiment.cameraToSlm = cameraToSlm;
% experiment.neuronXY = neuronXY;
% save([Path, experiment_name '.mat'], 'experiment');
% 




